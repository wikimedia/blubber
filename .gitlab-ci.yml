include:
  - project: 'repos/releng/kokkuri'
    file: 'includes/images.yaml'
  - project: 'repos/releng/docpub'
    file: 'includes/publish.yml'

default:
  tags:
    - kubernetes

stages:
  - lint
  - test
  - acceptance
  - publish
  - build-publish-docs

workflow:
  # Run pipelines for:
  #  1. Merge requests
  #  2. Protected refs (branches or tags)
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_REF_PROTECTED == 'true'

.remote-context:
  variables:
    GIT_STRATEGY: none
    BUILD_CONTEXT: "${CI_REPOSITORY_URL}#${CI_COMMIT_REF_NAME}"
    BUILD_FRONTEND: docker-registry.wikimedia.org/repos/releng/blubber/buildkit:v1.0.0

.run:
  extends: [.kokkuri:build-and-run-image, .remote-context]

.publish:
  extends: [.kokkuri:build-and-publish-image, .remote-context]

.remote-context:
  variables:
    GIT_STRATEGY: none
    BUILD_CONTEXT: "${CI_REPOSITORY_URL}#${CI_COMMIT_REF_NAME}"
    BUILD_FRONTEND: docker-registry.wikimedia.org/repos/releng/blubber/buildkit:v1.0.0

.run:
  extends: [.kokkuri:build-and-run-image, .remote-context]

.publish:
  extends: [.kokkuri:build-and-publish-image, .remote-context]

lint-code:
  stage: lint
  extends: .run
  variables:
    BUILD_VARIANT: make
    RUN_ARGUMENTS: '["lint"]'

ensure-docs-were-generated:
  stage: lint
  extends: .run
  variables:
    BUILD_VARIANT: make
    RUN_ARGUMENTS: '["ensure-docs"]'

run-unit-tests:
  stage: test
  extends: .run
  variables:
    BUILD_VARIANT: make
    RUN_ARGUMENTS: '["test"]'

build-frontend-for-testing:
  stage: test
  extends: .publish
  variables:
    BUILD_VARIANT: buildkit
    BUILD_TARGET_PLATFORMS: linux/amd64
    PUBLISH_IMAGE_TAG: job-${CI_JOB_ID}
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
      when: never
    - when: always

build-acceptance-runner:
  stage: test
  extends: .publish
  variables:
    BUILD_VARIANT: acceptance
    PUBLISH_IMAGE_TAG: job-${CI_JOB_ID}
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
      when: never
    - when: always

run-acceptance-tests:
  stage: acceptance
  extends: .remote-context
  image: '${BUILD_ACCEPTANCE_RUNNER_IMAGE_REF}'
  variables:
    BLUBBER_TEST_IMAGE: '${BUILD_FRONTEND_FOR_TESTING_IMAGE_REF}'
  script:
    - cd /srv/app
    - make examples
  parallel:
    matrix:
      - BLUBBER_ONLY_EXAMPLES: ["@set1", "@set2", "@set3", "@set4"]
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
      when: never
    - when: always

# Publish a new version of the buildkit frontend each time a tag is pushed or
# an MR is merged to an experimental branch.
build-and-publish-frontend:
  stage: publish
  extends: .publish
  variables:
    BUILD_VARIANT: buildkit
    BUILD_TARGET_PLATFORMS: linux/amd64,linux/arm64
    PUBLISH_IMAGE_NAME: '${CI_PROJECT_PATH}/buildkit'
    PUBLISH_PROVENANCE: 'yes'
  tags:
    - trusted
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
    - if: $CI_COMMIT_BRANCH =~ /^experimental/ && $CI_COMMIT_REF_PROTECTED

.docs-common:
  stage: build-publish-docs
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build-documentation:
  variables:
    BUILD_VARIANT: docs-for-publishing
    BUILDCTL_BUILD_FLAGS: --output type=local,dest=generated-documentation
    DOCS_DIR: generated-documentation/docs
  extends:
    - .kokkuri:build-image
    - .remote-context
    - .docs-common
    - .docpub:build-docs

publish-documentation:
  needs: [build-documentation]
  extends:
    - .docs-common
    - .docpub:publish-docs
